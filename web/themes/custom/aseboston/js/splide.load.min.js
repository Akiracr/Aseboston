!function(u, t, e, p, c, f) {
  "use strict";
  var h = "splide"
    , i = h
    , m = "is-mounted"
    , v = "data-"
    , a = "." + h + "--default:not(." + m + ", ." + h + "--vanilla)"
    , x = e.splide || {};
  p = u.extend(p || {}, {
      init: function(t) {
          return t.splide || (t.splide = function(n) {
              var t, e, i = u.attr(n, v + h), a = u.parse(i), r = u.extend({}, x.defaults || {}, a), s = r.breakpoints, o = x.extras || {}, d = n.parentNode, i = u.hasClass(n, "unsplide");
              r.count && 1 === r.count && (a = x.resets || {},
              o = u.extend(o, a),
              r = u.extend(r, a));
              if (s)
                  for (e in s) {
                      var l;
                      u.hasProp(s, e) && ((l = s[e]).destroy || (s[e] = u.extend({}, o, l)))
                  }
              (function() {
                  var t, e;
                  r.randomize && (e = u.find(n, "." + h + "__list"),
                  u.isElm(e) && e.children && (!(t = e.children.length) || 0 <= (e = Math.floor(Math.random() * t)) && e < t && (r.start = e)))
              }
              )(),
              t = new Splide(n,r),
              t.on( 'mounted', function (obj) {
                document.querySelectorAll('.slide').forEach((slide, index) => {
                  if (index > 0) {
                    slide.querySelector('.left-side')?.classList.toggle('d-none');
                    slide.querySelector('.left-side')?.classList.remove('animate__animated', 'animate__fadeInLeft');
                    slide.querySelector('.right-side')?.classList.toggle('d-none');
                    slide.querySelector('.right-side')?.classList.remove('animate__animated', 'animate__fadeInRight');
                  }
                });
              }),
              p.initExtensions(),
              p.initListeners(t),
              u.hasClass(d, h + "-wrapper") || (d = r.animation || r.type ? p.getTransition(r.animation || r.type) : null,
              t.mount(p.extensions || {}, d));

              t.on( 'active', function(obj) {
                obj.slide.querySelector('.left-side')?.classList.toggle('d-none');
                obj.slide.querySelector('.left-side')?.classList.add('animate__animated', 'animate__fadeInLeft');
                obj.slide.querySelector('.right-side')?.classList.toggle('d-none');
                obj.slide.querySelector('.right-side')?.classList.add('animate__animated', 'animate__fadeInRight');
              });

              t.on( 'inactive', function(obj) {
                obj.slide.querySelector('.left-side')?.classList.toggle('d-none');
                obj.slide.querySelector('.left-side')?.classList.remove('animate__animated', 'animate__fadeInLeft');
                obj.slide.querySelector('.right-side')?.classList.toggle('d-none');
                obj.slide.querySelector('.right-side')?.classList.remove('animate__animated', 'animate__fadeInRight');
              });

              u.on(n, "click", "." + h + "__arrow--down", function(t) {
                  t.preventDefault();
                  var e = u.attr(t.target, v + "target")
                    , e = e ? u.find(f, e) : null
                    , t = u.toInt(u.attr(t.target, v + "offset"), 80);
                  u.isElm(e) && (e = u.rect(e),
                  c.scroll({
                      top: e.top - t,
                      behavior: "smooth"
                  }))
              }),
              i && t.destroy(!0);
              return u.addClass(n, m),
              t
          }(t)),
          t.splide
      }
  }),
  t.behaviors.splide = {
      attach: function(t) {
          u.once(p.init, i, a, t)
      },
      detach: function(t, e, n) {
          "unload" === n && u.once.removeSafely(i, a, t)
      }
  }
}(dBlazy, Drupal, drupalSettings, dSplide, this, this.document);
